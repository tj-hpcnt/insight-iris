generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma/core"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum InsightSource {
  INSPIRATION
  ANSWER
  DESCRIPTOR
}

enum OverlapType {
  STRONG
  WEAK
}

enum PolarityType {
  POSITIVE
  NEGATIVE
  NEUTRAL
}

enum QuestionType {
  BINARY
  SINGLE_CHOICE
  MULTIPLE_CHOICE
}

model Category {
  id                Int       @id @default(autoincrement())
  category         String
  topicHeader      String
  subcategory      String
  insightSubject   String
  expandedHints    String?
  insights         Insight[]
  categoryOverlapA CategoryOverlap[] @relation("CategoryA")
  categoryOverlapB CategoryOverlap[] @relation("CategoryB")
}

model Insight {
  id                Int       @id @default(autoincrement())
  categoryId        Int
  insightText       String
  source            InsightSource
  generationOrder   Int?
  category          Category  @relation(fields: [categoryId], references: [id])
  answers           Answer[]
  insightCompareA   InsightComparison[] @relation("InsightA")
  insightCompareB   InsightComparison[] @relation("InsightB")
}

model Style {
  id          Int       @id @default(autoincrement())
  name        String
  description String
}

model Question {
  id            Int          @id @default(autoincrement())
  inspirationId Int
  questionType  QuestionType
  questionText  String
  answers       Answer[]
}

model Answer {
  id         Int      @id @default(autoincrement())
  questionId Int
  answerText String
  insightId  Int
  question   Question @relation(fields: [questionId], references: [id])
  insight    Insight  @relation(fields: [insightId], references: [id])
}

model CategoryOverlap {
  id          Int         @id @default(autoincrement())
  categoryAId Int
  categoryBId Int
  overlap     OverlapType
  categoryA   Category    @relation("CategoryA", fields: [categoryAId], references: [id])
  categoryB   Category    @relation("CategoryB", fields: [categoryBId], references: [id])

  @@unique([categoryAId, categoryBId])
 }

model InsightComparison {
  id                Int              @id @default(autoincrement())
  insightAId        Int
  insightBId        Int
  polarity          PolarityType
  overlap           OverlapType
  insightA          Insight          @relation("InsightA", fields: [insightAId], references: [id])
  insightB          Insight          @relation("InsightB", fields: [insightBId], references: [id])
  presentation      InsightComparisonPresentation?

  @@unique([insightAId, insightBId])
}

model InsightComparisonPresentation {
  id                Int              @id @default(autoincrement())
  insightComparisonId Int            @unique
  presentationTitle String
  conciseAText      String
  conciseBText      String
  insightComparison InsightComparison @relation(fields: [insightComparisonId], references: [id])
}
